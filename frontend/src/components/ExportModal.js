import React, { useState } from 'react';
import {
  Dialog,
  DialogContent,
  DialogTitle,
  Typography,
  Box,
  Button,
  Radio,
  RadioGroup,
  FormControlLabel,
  FormControl,
  FormLabel,
  MenuItem,
  Select,
  IconButton,
  Link,
  alpha,
  useTheme
} from '@mui/material';
import {
  Close as CloseIcon,
  FileDownload as DownloadIcon,
  Settings as SettingsIcon,
  Description as PDFIcon,
  TextFields as TextIcon,
  TableChart as CSVIcon
} from '@mui/icons-material';
import toast from 'react-hot-toast';
import useFeatureAccess from '../hooks/useFeatureAccess';

const ExportModal = ({ open, onClose, analysisData }) => {
  const theme = useTheme();
  const { hasAccess, showUpgrade, commonAccess, FEATURES } = useFeatureAccess();
  const [reportType, setReportType] = useState('standard');
  const [format, setFormat] = useState('pdf');
  const [isExporting, setIsExporting] = useState(false);

  const formatIcons = {
    pdf: PDFIcon,
    text: TextIcon,
    csv: CSVIcon
  };

  const handleExport = async () => {
    // Check if user has access to advanced exports for detailed reports
    if (reportType === 'detailed' && !commonAccess.advancedExports) {
      showUpgrade(FEATURES.ADVANCED_EXPORTS, {
        showBenefits: true,
        customMessage: 'Detailed reports with comprehensive breakdowns are available in higher tier plans.'
      });
      return;
    }
    
    setIsExporting(true);
    
    // Simulate export process
    toast.loading('Generating report...', { duration: 2000 });
    
    setTimeout(() => {
      const fileName = `ad-analysis-${Date.now()}.${format}`;
      toast.success(`${reportType === 'standard' ? 'Standard' : 'Detailed'} report exported as ${format.toUpperCase()}!`);
      
      // Simulate download trigger
      const downloadData = generateMockReportContent();
      const blob = new Blob([downloadData], { type: getContentType(format) });
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = fileName;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
      
      setIsExporting(false);
      onClose();
    }, 2000);
  };

  const getContentType = (format) => {
    switch (format) {
      case 'pdf': return 'application/pdf';
      case 'csv': return 'text/csv';
      case 'text': return 'text/plain';
      default: return 'text/plain';
    }
  };

  const generateMockReportContent = () => {
    const timestamp = new Date().toLocaleDateString();
    const content = `
AD COPY ANALYSIS REPORT
Generated: ${timestamp}

ORIGINAL AD (Score: 67/100)
${analysisData?.original || 'Flash Sale! 50% off everything. Shop now!'}

IMPROVED VERSION (Score: 89/100)
Last Chance: 50% Off Ends Tonight

Join 10,000+ saving 50% on premium gear

Proven to help you save on quality items

Claim Your 50% Discount Now

KEY IMPROVEMENTS:
✓ Fixed compliance violation (Facebook ad policy)
✓ Added urgency trigger with specific deadline
✓ Included social proof with customer count
✓ Strengthened call-to-action language
✓ Improved specificity and clarity

${reportType === 'detailed' ? `
DETAILED ANALYSIS:
- Compliance Check: PASSED
- Psychology Triggers: 4/5 implemented
- Legal Risk Assessment: LOW RISK
- Brand Voice: CONSISTENT
- ROI Optimization: HIGH POTENTIAL
- Platform Compatibility: FACEBOOK, GOOGLE APPROVED

A/B TEST VARIATIONS:
1. Urgency-Focused (85/100)
2. Social Proof Heavy (87/100)
3. Premium Positioning (83/100)
` : ''}

Generated by AdCopySurge
    `.trim();
    
    return content;
  };

  const FormatIcon = formatIcons[format];

  return (
    <Dialog
      open={open}
      onClose={onClose}
      maxWidth="sm"
      fullWidth
      PaperProps={{
        sx: {
          borderRadius: 4,
          p: 1
        }
      }}
    >
      <DialogTitle>
        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
          <Typography variant="h5" fontWeight={700}>
            Export Analysis
          </Typography>
          <IconButton onClick={onClose} size="small">
            <CloseIcon />
          </IconButton>
        </Box>
      </DialogTitle>

      <DialogContent sx={{ py: 3 }}>
        {/* Report Type Selection */}
        <FormControl component="fieldset" sx={{ mb: 4, width: '100%' }}>
          <FormLabel component="legend" sx={{ fontWeight: 600, mb: 2 }}>
            Report Type
          </FormLabel>
          <RadioGroup
            value={reportType}
            onChange={(e) => setReportType(e.target.value)}
          >
            <FormControlLabel
              value="standard"
              control={<Radio color="primary" />}
              label={
                <Box>
                  <Typography variant="body1" fontWeight={600}>
                    Standard Report (Recommended)
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    Before/after comparison, top changes, alternatives
                  </Typography>
                </Box>
              }
              sx={{ 
                mb: 1,
                p: 2,
                border: reportType === 'standard' ? 2 : 1,
                borderColor: reportType === 'standard' ? 'primary.main' : 'divider',
                borderRadius: 2,
                backgroundColor: reportType === 'standard' 
                  ? alpha(theme.palette.primary.main, 0.05) 
                  : 'transparent'
              }}
            />
            <FormControlLabel
              value="detailed"
              control={<Radio color="primary" />}
              label={
                <Box>
                  <Typography variant="body1" fontWeight={600}>
                    Detailed Report
                  </Typography>
                  <Typography variant="body2" color="text.secondary">
                    Everything in Standard + all 9 tool breakdowns
                  </Typography>
                </Box>
              }
              sx={{ 
                p: 2,
                border: reportType === 'detailed' ? 2 : 1,
                borderColor: reportType === 'detailed' ? 'primary.main' : 'divider',
                borderRadius: 2,
                backgroundColor: reportType === 'detailed' 
                  ? alpha(theme.palette.primary.main, 0.05) 
                  : 'transparent'
              }}
            />
          </RadioGroup>
        </FormControl>

        {/* Format Selection */}
        <Box sx={{ mb: 4 }}>
          <FormLabel sx={{ fontWeight: 600, mb: 2, display: 'block' }}>
            Format
          </FormLabel>
          <Box sx={{ display: 'flex', gap: 2 }}>
            <Select
              value={format}
              onChange={(e) => setFormat(e.target.value)}
              size="medium"
              sx={{ minWidth: 200 }}
              startAdornment={<FormatIcon sx={{ mr: 1, fontSize: '1.25rem' }} />}
            >
              <MenuItem value="pdf">
                <PDFIcon sx={{ mr: 1, fontSize: '1.25rem' }} />
                PDF
              </MenuItem>
              <MenuItem value="text">
                <TextIcon sx={{ mr: 1, fontSize: '1.25rem' }} />
                Plain Text
              </MenuItem>
              <MenuItem value="csv">
                <CSVIcon sx={{ mr: 1, fontSize: '1.25rem' }} />
                CSV
              </MenuItem>
            </Select>
          </Box>
        </Box>

        {/* Agency Branding Section */}
        <Box 
          sx={{ 
            p: 3,
            backgroundColor: alpha(theme.palette.info.main, 0.05),
            borderRadius: 2,
            border: 1,
            borderColor: alpha(theme.palette.info.main, 0.2),
            mb: 4
          }}
        >
          <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', mb: 1 }}>
            <Typography variant="subtitle1" fontWeight={600}>
              Agency branding configured in Settings
            </Typography>
            <Link 
              component="button"
              variant="body2"
              onClick={() => {
                toast.success('Settings page coming soon!');
              }}
              sx={{ 
                display: 'flex', 
                alignItems: 'center', 
                gap: 0.5,
                textDecoration: 'none',
                '&:hover': { textDecoration: 'underline' }
              }}
            >
              <SettingsIcon sx={{ fontSize: '1rem' }} />
              Edit Branding →
            </Link>
          </Box>
          <Typography variant="body2" color="text.secondary">
            White-label reports with your logo and brand colors (Pro Plan)
          </Typography>
        </Box>

        {/* Action Buttons */}
        <Box sx={{ display: 'flex', gap: 2, justifyContent: 'flex-end' }}>
          <Button
            variant="outlined"
            onClick={onClose}
            size="large"
            sx={{ textTransform: 'none', fontWeight: 600 }}
          >
            Cancel
          </Button>
          <Button
            variant="contained"
            onClick={handleExport}
            disabled={isExporting}
            size="large"
            startIcon={isExporting ? null : <DownloadIcon />}
            sx={{
              textTransform: 'none',
              fontWeight: 700,
              minWidth: 160,
              position: 'relative'
            }}
          >
            {isExporting ? 'Generating...' : 'Generate Report'}
          </Button>
        </Box>

        {/* Format Info */}
        <Box sx={{ mt: 3, p: 2, backgroundColor: alpha(theme.palette.grey[100], 0.5), borderRadius: 1 }}>
          <Typography variant="caption" color="text.secondary">
            <strong>PDF:</strong> Professional format with formatting and images<br />
            <strong>Plain Text:</strong> Simple text format for easy copying<br />
            <strong>CSV:</strong> Spreadsheet format for data analysis
          </Typography>
        </Box>
      </DialogContent>
    </Dialog>
  );
};

export default ExportModal;