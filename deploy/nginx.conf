# AdCopySurge Backend Nginx Configuration
# Place this in /etc/nginx/sites-available/adcopysurge
# Then create symlink: ln -s /etc/nginx/sites-available/adcopysurge /etc/nginx/sites-enabled/

upstream adcopysurge_backend {
    server unix:/run/adcopysurge/gunicorn.sock;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

server {
    listen 80;
    server_name api.adcopysurge.com;  # API subdomain for backend
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' cdn.paddle.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Logs
    access_log /var/log/nginx/adcopysurge_access.log;
    error_log /var/log/nginx/adcopysurge_error.log;

    # Client upload size
    client_max_body_size 10M;

    # Rate limiting
    location /api/auth {
        limit_req zone=auth burst=10 nodelay;
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
    }

    location /api {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
        access_log off;
    }

    # API Documentation
    location /docs {
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
    }

    location /redoc {
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
    }

    # Root endpoint
    location / {
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
    }

    # Static files (if needed)
    location /static/ {
        alias /home/deploy/adcopysurge/backend/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # Favicon
    location /favicon.ico {
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Robots.txt
    location /robots.txt {
        proxy_pass http://adcopysurge_backend;
        include proxy_params;
        expires 7d;
        add_header Cache-Control "public";
    }
}

# HTTPS configuration (uncomment after SSL certificate is configured)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;  # Replace with your actual domain
# 
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;
# 
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_stapling on;
#     ssl_stapling_verify on;
# 
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# 
#     # Include all location blocks from HTTP server above
#     # ... (copy all location blocks here)
# }

# Redirect HTTP to HTTPS (uncomment after SSL is configured)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }